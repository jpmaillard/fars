devtools::load_all(".")
use_vignette("fars_details")
devtools::use_vignette("fars_details")
library(devtools)
use_vignette("fars_details")
package_info()
package_info(roxygen2)
library(roxygen2)
package_info(roxygen2)
package_info("roxygen2")
use_data()
?use_data
devtools::document()
document()
devtools::document()
use_readme_md
use_readme_md()
devtools::use_testthat()
use_testthat()
library(testthat)
library(roxygen2)
library(devtools)
test()
document()
test()
fars_map_state <- function(state.num, year) {
filename <- make_filename(year)
data <- fars_read(filename)
state.num <- as.integer(state.num)
if(!(state.num %in% unique(data$STATE))) {
stop("invalid STATE number: ", state.num)
}
data.sub <- dplyr::filter(data, .dots = paste0("STATE==", state.num))
if(nrow(data.sub) == 0L) {
message("no accidents to plot")
return(invisible(NULL))
}
is.na(data.sub$LONGITUD) <- data.sub$LONGITUD > 900
is.na(data.sub$LATITUDE) <- data.sub$LATITUDE > 90
with(data.sub, {
maps::map("state", ylim = range(LATITUDE, na.rm = TRUE),
xlim = range(LONGITUD, na.rm = TRUE))
graphics::points(LONGITUD, LATITUDE, pch = 46)
})
}
fars_map_state(10, 2015)
rlang::last_error()
test()
document()
test()
use_git()
use_github()
use_github(fars)
use_github("fars")
use_github()
?browse_github_token()
git remote add origin https://github.com/jpmaillard/fars.git
use_github()
